#!/usr/bin/env bash

set -eo pipefail

## 🧔🏻 Drifter, a small vagrant, powered by multipass
## All commands require the name of the VM to be passed e.g.
## # drifter dev ssh
## or
## # drifter provision dev ./my/vm.sh
## Version=0.0.1
## Commands:

log() {
  logger -t drifter -s -- "$*"  > /dev/stderr
}

sshKey=~/.ssh/multipass.id_rsa

# TODO: change this to:
# - use cloud init to setup a user matching current username on the host
# - generate a dedicated SSH key
# - add it via cloud-init
# and stop copying the mulitpass key
drifter_ensure_ssh_key() {
  # If we don't have it - get the multipass ssh key, we will need sudo for that
  if [[ ! -e $sshKey  ]] ; then
    log "$sshKey not found, copying"
    sudo cp /var/root/Library/Application\ Support/multipassd/ssh-keys/id_rsa $sshKey
    sudo chown $USER:staff $sshKey
  fi
}

drifter_launch_if_necessary() {
  local name=$1
  # Create the machine if not there already
  if [[ "$(multipass info --all --format json | jq -r .info.$name)" == "null" ]] ;then
    log "creating $name"
    multipass launch \
              --cpus 4 \
              --mem 4G \
              --disk 20G \
              --name $name \
              18.04
  fi

}

drifter_stop() {
  local name=$1
  log "stopping $name"
  multipass stop $name
  exit 0
}

drifter_suspend() {
  local name=$1
  log "suspending $name"
  multipass suspend $name
  exit 0
}

drifter_provision() {
  local name=$1
  local provisionScript=$2
  log "provisioning $name with $provisionScript"
  multipass transfer $provisionScript $name:/tmp/provision.sh
  multipass exec $name -- sudo bash /tmp/provision.sh
  exit 0
}

drifter_start_if_necessary() {
  local name=$1
  if [[ "$(multipass info $name --format json | jq -r .info.$name.state)" != "Running" ]] ; then
    log "starting $name"
    multipass start $name
  else
    log "$name already started"
  fi
}


drifter_shell() {
  local name=$1
  log "starting $name shell"
  multipass shell $name
  exit 0
}

# TODO: configurable tunnels!
drifter_tunnels() {
  local name=$1
  local ip=$2
  log "starting $name tunnels (ip: $ip)"
  ssh ubuntu@$ip \
      -i $sshKey \
      -A \
      -L 3000:localhost:3000 \
      -L 3001:localhost:3001 \
      -L 3005:localhost:3005 \
      -L 3034:localhost:3034 \
      -L 8025:localhost:8025 \
      -L 9100:localhost:9100 \
      -L 9630:localhost:9630
}

drifter_ssh() {
  local name=$1
  local ip=$2
  log "sshing to $name (ip: $ip)"
  ssh ubuntu@$ip -i $sshKey -A
}


drifter_ip() {
  local name=$1
  log "finding ip for $name"
  ip=$(multipass info $name --format json | jq -r .info.$name.ipv4[0])
  log "$name -> $ip"
  echo $ip
}


drifter_help() {
  grep '##' $0 | grep -v grep | sed 's/## //g'
}

# Entry point
drifter_main() {
  local name=$1
  local command=$2
  local provisionScript=$3

  if [[ "$name" == "-h" || "$name" == "--help" || "$name" == "help" ]] ; then
    drifter_help
    exit 0
  fi


  # validate name
  if [[ "$name" == "" ]] ; then
    log "Need a name! Only 'dev' and 'work' are supported atm."
    multipass list
    exit 1
  fi

  if [[ "$name" == "work" || "$name" == "dev" ]] ; then
    log "$name ok"
  else
    log "Unknown machine name: $name, accepted: 'dev' and 'work'"
    exit 1
  fi

  drifter_ensure_ssh_key
  drifter_launch_if_necessary $name
  drifter_start_if_necessary $name

  case $command in
    suspend) ## Suspend the VM. Unsupported right now
      drifter_suspend $name
      ;;
    stop) ## Stop the VM
      drifter_stop $name
      ;;
    provision) ## Provision the VM with given Bash script
      drifter_provision $name $provisionScript
      ;;
    tunnels) ## Start a SSH session with multiple ports opened
      drifter_tunnels $name $(drifter_ip $name)
      ;;
    shell) ## Start a shell, no agent or tunnels opened
      drifter_shell $name
      ;;
    ssh) ## Start a SSH session with SSH agent forwarded
      drifter_ssh $name $(drifter_ip $name)
      ;;
    ip) ## Find the IP of the VM
      echo $(drifter_ip $name)
      ;;
    *)
      drifter_help
      exit 1
      ;;
    esac
}



# name / command / optional provision script
drifter_main "$1" "$2" "$3"
